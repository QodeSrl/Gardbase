load("@aspect_rules_js//js:defs.bzl", "js_library", "js_binary")
load("@aspect_rules_ts//ts:defs.bzl", "ts_project")
load("@npm//:defs.bzl", "npm_link_all_packages")

package(default_visibility = ["//visibility:public"])

# Link npm packages for this package
npm_link_all_packages(name = "node_modules")

# TypeScript compilation
ts_project(
    name = "src",
    srcs = glob([
        "src/**/*.ts",
        "src/**/*.tsx",
    ]),
    declaration = True,
    tsconfig = "//:tsconfig",
    deps = [
        ":node_modules/@types/react",
        ":node_modules/@types/react-dom",
        ":node_modules/react",
        ":node_modules/react-dom",
        ":node_modules/react-router-dom",
        ":node_modules/react-icons",
        ":node_modules/tailwindcss",
    ],
)

# Vite development server
js_binary(
    name = "dev",
    entry_point = ":node_modules/vite/bin/vite.js",
    data = [
        "package.json",
        "vite.config.ts",
        "index.html",
        "tailwind.config.js",
        ":src",
        ":node_modules/vite",
        ":node_modules/@vitejs/plugin-react-swc",
        ":node_modules/@tailwindcss/vite",
    ],
    args = ["--config", "$(location vite.config.ts)"],
    env = {
        "NODE_ENV": "development",
    },
)

# Vite build
js_binary(
    name = "build",
    entry_point = ":node_modules/vite/bin/vite.js",
    data = [
        "package.json",
        "vite.config.ts",
        "index.html",
        "tailwind.config.js",
        ":src",
        ":node_modules/vite",
        ":node_modules/@vitejs/plugin-react-swc",
        ":node_modules/@tailwindcss/vite",
    ],
    args = ["build", "--config", "$(location vite.config.ts)"],
    env = {
        "NODE_ENV": "production",
    },
)

# ESLint
js_binary(
    name = "lint",
    entry_point = ":node_modules/eslint/bin/eslint.js",
    data = [
        "package.json",
        ".eslintrc.js",
        ":src",
        ":node_modules/eslint",
        ":node_modules/@typescript-eslint/eslint-plugin",
        ":node_modules/@typescript-eslint/parser",
        ":node_modules/eslint-plugin-react-hooks",
        ":node_modules/eslint-plugin-react-refresh",
    ],
    args = [
        ".",
        "--ext",
        "ts,tsx",
        "--report-unused-disable-directives",
        "--max-warnings",
        "0",
    ],
)

# Prettier
js_binary(
    name = "format",
    entry_point = ":node_modules/prettier/bin/prettier.js",
    data = [
        "package.json",
        ".prettierrc.json",
        ":src",
        ":node_modules/prettier",
        ":node_modules/prettier-plugin-tailwindcss",
    ],
    args = ["--write", "."],
)

js_binary(
    name = "format_check",
    entry_point = ":node_modules/prettier/bin/prettier.js",
    data = [
        "package.json",
        ".prettierrc.json",
        ":src",
        ":node_modules/prettier",
        ":node_modules/prettier-plugin-tailwindcss",
    ],
    args = ["--check", "."],
)

# Vite preview
js_binary(
    name = "preview",
    entry_point = ":node_modules/vite/bin/vite.js",
    data = [
        "package.json",
        "vite.config.ts",
        "dist",
        ":node_modules/vite",
    ],
    args = ["preview", "--config", "$(location vite.config.ts)"],
)